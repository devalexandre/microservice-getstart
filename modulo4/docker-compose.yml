version: '3.5'

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server
    volumes:
    - .:/app
    networks:
      - curso_microservices
    environment:
      - "SERVICE=server"
      - "KAFKA_HOST=kafka"
      - "KAFKA_PORT=9092"
      - "NODE_ENV=develop"
    depends_on:
      - kafka

  notify:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notify
    volumes:
      - .:/app
    networks:
      - curso_microservices
    environment:
      - "SERVICE=notify"
      - "KAFKA_HOST=kafka"
      - "KAFKA_PORT=9092"
      - "NODE_ENV=develop"
    depends_on:
      - kafka

  kafka:
    image: alephp/kafka
    ports:
      - "2181:2181"
      - "9092:9092"
    hostname: kafka
    container_name: kafka
    networks:
      - curso_microservices
    environment:
      - "ADVERTISED_HOST=192.168.0.4"
      - "ADVERTISED_PORT=9092"
      - "AUTO_CREATE_TOPICS=true"
    command: >
      bash -c
      "(sleep 15s &&
      /opt/kafka_2.13-2.7.0/bin/kafka-topics.sh
      --create
      --zookeeper
      localhost:2181 --replication-factor 1 --partitions 3
      --topic microservice-curso &) && (supervisord -n) && (
      /opt/kafka_2.13-2.7.0/bin/kafka-leader-election.sh
      --bootstrap-server :9092
      --topic microservice-curso
      --partition 0
      --election-type preferred)"

networks:
  curso_microservices:
    name: "curso_microservices"
